<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="  
	    http://www.springframework.org/schema/util 
	    http://www.springframework.org/schema/util/spring-util-4.0.xsd
	    http://www.springframework.org/schema/mvc 
	    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans       
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 把标记了@Controller注解的类转换为bean -->
	<!-- 主要是为@Autowired服务的 -->
	<context:component-scan base-package="com.wqb.controller.*" />
<!-- 	<context:component-scan base-package="com.wqb.service.*" /> -->
	<context:component-scan base-package="test.*" />

	<!-- 定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	 <!-- 开启注解 -->   
	<mvc:annotation-driven conversion-service="conversionService"/>
	
		<!-- springMvc传json值时的乱码解决 -->
		<!--<mvc:message-converters> <bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
			<property name="supportedMediaTypes"> <list> <value>text/plain;charset=UTF-8</value> 
			</list> </property> </bean> </mvc:message-converters> -->
			
	
	<context:component-scan base-package="com.wqb">
		<context:exclude-filter type="annotation"  expression="org.springframework.stereotype.Service" />
	</context:component-scan> 
	
	
	<!-- 静态资源的访问 -->
	<mvc:default-servlet-handler />
	
	
	<!-- 第二种是采用<mvc:resources />，在springmvc的配置文件中加入以下代码 -->
<!-- 	<mvc:resources location="/plugins/" mapping="/plugins/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/echarts/" mapping="/echarts/**" />
	<mvc:resources location="/dist/" mapping="/dist/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/font/" mapping="/font/**" />
	<mvc:resources location="/files/" mapping="/files/**" /> -->
	
	<!-- 返回JSON模版 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 上传拦截，如最大上传值及最小上传值 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
	</bean>
	 
	<!-- 解决使用@ResponseBody 的中文乱码。 -->
	<bean class="com.wqb.common.UTF8StringBeanPostProcessor"></bean>
	<bean id="loginInterceptor" class="com.wqb.common.LoginInterceptor" />
	<mvc:interceptors>
		<!-- 登录拦截器 -->
		<mvc:interceptor>
		
		 <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller --> 
			<mvc:mapping path="/**" />
			
			<!-- 用户管理逻辑免拦截白名单 -->
			<mvc:exclude-mapping path="/system/login" />
			<mvc:exclude-mapping path="/system/loginOut" />
			<mvc:exclude-mapping path="/system/toLogin" />
			<mvc:exclude-mapping path="/system/sessionOver" />
			<mvc:exclude-mapping path="/system/ajaxAuthentication" />
			<mvc:exclude-mapping path="/system/checkUserType" />
			<mvc:exclude-mapping path="/system/accountLogin" />
			
			<mvc:exclude-mapping path="/toSystem/queryUserByPtID" />
			<mvc:exclude-mapping path="/toSystem/queryUserStateById" />
			<mvc:exclude-mapping path="/toSystem/queryUserInfo" />
			
			<!-- 商城请求接口 satrt-->
			<mvc:exclude-mapping path="/system/synchronizeUserToAccoun" />
			
			<mvc:exclude-mapping path="/system/testUserToCheckPermission" />
			<mvc:exclude-mapping path="/system/testToUserLoing" />
			
			<mvc:exclude-mapping path="/system/userToCheckPermission" />
			<mvc:exclude-mapping path="/system/userToLogin" />
			<!-- 商城请求接口  end-->

			
			
			<!-- APP端放行url -->
			<mvc:exclude-mapping path="/systemAPP/**" />
			<mvc:exclude-mapping path="/BalanceSheet/balanceSheetApp" />
			<mvc:exclude-mapping path="/IncomeStatement/incomeStatrmentAPP" />
			<mvc:exclude-mapping path="/detailAccount/queryDetailAccountAPP" />
			<mvc:exclude-mapping path="/ledger/queryLedgerAccountAPP" />
			<mvc:exclude-mapping path="/sbubalance/querySbujectBalanceAPP" />
			<mvc:exclude-mapping path="/stock/**" />
			<mvc:exclude-mapping path="/voucher/**" />
			<ref bean="loginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	  <!-- 配置日期转换器 -->
       <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" >
        	<property name="converters">
        		<set>
        			<bean class="com.wqb.controller.converter.CustomDateConverter"></bean>
        		</set>
        	</property>
        </bean>
        
  	<!-- 全局异常处理器 -->
	<!-- <bean id="handlerExceptionResolver" class="com.wqb.common.CustomExceptionResolver"/> -->
	
	
<!-- 	<bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">   -->
	<!-- 这里是PropertiesFactoryBean类，它也有个locations属性，也是接收一个数组，跟上面一样  -->
<!-- 	    <property name="locations"> -->
<!-- 	        <array> -->
<!-- 	            <value>classpath:config/address.properties</value>   -->
<!-- 	             <value>classpath:config/*.properties</value>    -->
<!-- 	             <value>classpath:config/filePath.properties</value>   -->
<!-- 	        </array>  -->
<!-- 	    </property>  -->
<!-- 	    <property name="fileEncoding" value="UTF-8"></property>    -->
<!-- 	</bean> -->
	<!-- 加载属性配置文件 -->
<!-- 	需要指出的是，如果只在springMvc.xml引入下面代码，只能在springMvc.xml文件中扫描或者注册的bean中才能通过@Value("${web.view.prefix}")获取这个字符串，
	其他未在springMvc.xml扫描和定义的bean必须在相应的xml文件中引入下面代码才能使用@Value("${}”)表达式 -->
	<!-- <context:property-placeholder  ignore-unresolvable="true" location="classpath:config/pay.properties" />  --> 
	
	
	



</beans>