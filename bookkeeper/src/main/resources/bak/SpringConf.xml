<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd   
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd ">

      <!-- 加载数据库属性配置文件 -->
		<!--  <context:property-placeholder location="classpath:/properties/db.properties"  ignore-unresolvable="true" /> -->
		<bean class="com.wqb.common.EncryptPropertyPlaceholderConfigurer" p:location="classpath:/properties/db.properties"></bean>
	<!-- 配置数据源 -->
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.url}" />
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${db.initialSize}" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${db.maxActive}" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${db.maxIdle}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${db.minIdle}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${db.maxWait}" />
		<!-- 以下三项都是为了防止mysql 8小时 拒绝连接问题 -->
		<property name="minEvictableIdleTimeMillis">
			<value>${db.minEvictableIdleTimeMillis}</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>${db.timeBetweenEvictionRunsMillis}</value>
		</property>
		<property name="numTestsPerEvictionRun">
			<value>${db.numTestsPerEvictionRun}</value>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:MyBatisConf.xml" />
		<!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model" 
			/> -->
	</bean>
	
	
	
	<bean id="pinyinToHanYu" class="com.wqb.common.PinyinToHanYu">
		<property name="configLocation" value="classpath:config/unicode_to_hanyu_pinyin.txt" />
	</bean>
	<bean class="com.wqb.service.common.SpringApplicationContextHolder" />  

	<!-- 自动扫描注解的bean -->
	<context:component-scan base-package="com.wqb.dao" />
	<context:component-scan base-package="com.wqb.service.*" />

		<!-- 开启注解方式声明事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
	<!-- 这里是PropertiesFactoryBean类，它也有个locations属性，也是接收一个数组，跟上面一样  -->
	    <property name="locations">
	        <array>
	            <value>classpath:config/address.properties</value>  
	             <!-- <value>classpath:config/*.properties<sa/value>    -->
	             <value>classpath:config/filePath.properties</value>  
	        </array> 
	    </property> 
	    <property name="fileEncoding" value="UTF-8"></property>   
	</bean>
	
	
	<!-- 	<bean id="jedis" class="redis.clients.jedis.Jedis">
		<constructor-arg index="0" value="127.0.0.1" />
	</bean> -->
	
	
	<!-- redis 配置 -->
	
	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
	</bean>	
	<!-- jedis客户端单机版 -->
	 <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
	 <!-- 配置  host  password  -->
<!-- 		<constructor-arg name="port" value="6379"></constructor-arg> -->
<!-- 		<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg> -->
<!-- 		<constructor-arg name="host" value="127.0.0.1"></constructor-arg> -->
		
<!-- 		<constructor-arg name="timeout" value="5000"></constructor-arg> -->
<!-- 		<constructor-arg name="password" value="wqb123"></constructor-arg> -->
		
		<constructor-arg name="port" value="${redis.port}"></constructor-arg>
		<constructor-arg name="poolConfig" ref="${redis.poolConfig}"></constructor-arg>
		<constructor-arg name="host" value="${redis.host}"></constructor-arg>
		<constructor-arg name="timeout" value="${redis.timeout}"></constructor-arg>
		<constructor-arg name="password" value="${redis.password}"></constructor-arg>
	
	</bean>
	
	<bean id="jedisClient" class="com.wqb.common.JedisClientSingle"></bean> 
	
	
	
 	<!--   	<bean id="payment" class="com.wqb.controller.time.Payment" /> 
        <bean id="midStatusTaskInfo"
            class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <property name="targetObject" ref="payment" />
            <property name="targetMethod" value="dzPayFun" />
        </bean>
        <bean id="midStatusTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
            <property name="jobDetail" ref="midStatusTaskInfo" />
            <property name="cronExpression">
            	<value>0 0 0 15 * ?</value>
            </property>
        </bean>
         <bean id="registerQuartz"
            class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="triggers">
                <list>
                    <ref bean="midStatusTaskTrigger" />
                </list>
            </property>
        </bean> --> 
 	
</beans>